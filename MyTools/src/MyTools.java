
import com.tnqsoft.bank.Donga;
import com.tnqsoft.bank.Vietcombank;
import java.awt.Cursor;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import jxl.Cell;
import jxl.Sheet;
import jxl.Workbook;
import jxl.read.biff.BiffException;
import jxl.write.Label;
import jxl.write.WritableSheet;
import jxl.write.WritableWorkbook;
import jxl.write.WriteException;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author nntuan
 */
public class MyTools extends javax.swing.JFrame {

	/**
	 * Creates new form MyTools
	 */
	public MyTools() {
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnChoice = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtFilename = new javax.swing.JTextField();
        btnReport = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblResult = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        txtAccount = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtDate = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtNote = new javax.swing.JTextField();
        btnFilter = new javax.swing.JButton();
        btnClearFilter = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txtBank = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Bank analytics - Ver 1.0.3");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        btnChoice.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/folder.png"))); // NOI18N
        btnChoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChoiceActionPerformed(evt);
            }
        });

        jLabel1.setText("Lựa chọn file:");

        txtFilename.setEditable(false);
        txtFilename.setEnabled(false);

        btnReport.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/import_excel.png"))); // NOI18N
        btnReport.setText("Nhập dữ liệu");
        btnReport.setToolTipText("");
        btnReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReportActionPerformed(evt);
            }
        });

        tblResult.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Tài khoản", "Nhận tiền", "Chuyển tiền", "Ngày", "Chú thích"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblResult);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Tìm kiếm"));

        jLabel2.setText("Tài khoản:");
        jLabel2.setToolTipText("");

        jLabel3.setText("Ngày:");

        jLabel4.setText("Chú thích:");

        txtNote.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNoteActionPerformed(evt);
            }
        });

        btnFilter.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/filter.png"))); // NOI18N
        btnFilter.setText("Lọc dữ liệu");
        btnFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFilterActionPerformed(evt);
            }
        });

        btnClearFilter.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/filter_delete.png"))); // NOI18N
        btnClearFilter.setText("Bỏ lọc");
        btnClearFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearFilterActionPerformed(evt);
            }
        });

        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/disk.png"))); // NOI18N
        btnSave.setText("Xuất kết quả ra file Excel");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtAccount, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDate, javax.swing.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNote)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnClearFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnSave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(txtAccount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFilter)
                    .addComponent(btnClearFilter))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtNote, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSave))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel5.setText("Ngân hàng:");

        txtBank.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Vietcombank", "Đông Á Bank" }));
        txtBank.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBankActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(10, 10, 10))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnReport)
                    .addComponent(txtBank, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtFilename, javax.swing.GroupLayout.PREFERRED_SIZE, 456, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnChoice)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(txtFilename, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnChoice))
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBank, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnReport)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 285, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnChoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChoiceActionPerformed
        // TODO add your handling code here:
		JFileChooser fileChooser = new JFileChooser();
		//fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
		FileNameExtensionFilter filter = new FileNameExtensionFilter("Microsoft Excel 97/2000/XP/2003", "xls");
		fileChooser.setFileFilter(filter);
		int result = fileChooser.showOpenDialog(this);
		if (result == JFileChooser.APPROVE_OPTION) {
			File selectedFile = fileChooser.getSelectedFile();
			if(selectedFile.getName().endsWith("xls")){
				txtFilename.setText(selectedFile.getAbsolutePath());
			} else {
				JOptionPane.showMessageDialog(this, "Hãy lựa chọn file Excel", "Thông báo",JOptionPane.WARNING_MESSAGE);
			}
		}
    }//GEN-LAST:event_btnChoiceActionPerformed

    private void btnReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReportActionPerformed
		try {
			// TODO add your handling code here:
			if(createReport()){
				JOptionPane.showMessageDialog(this, "Nhập dữ liệu thành công.", "Thông báo",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (IOException | BiffException ex) {
			Logger.getLogger(MyTools.class.getName()).log(Level.SEVERE, null, ex);
		}
    }//GEN-LAST:event_btnReportActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
		tblResult.getColumnModel().getColumn(0).setMaxWidth(60);
		tblResult.setAutoCreateRowSorter(true);
    }//GEN-LAST:event_formWindowOpened

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
		DefaultTableModel model = (DefaultTableModel) tblResult.getModel();
		if(model.getRowCount() == 0 ) {
			JOptionPane.showMessageDialog(this, "Hiện giờ không có dữ liệu.", "Thông báo",JOptionPane.WARNING_MESSAGE);
		} else {
			JFileChooser fileChooser = new JFileChooser();
			FileNameExtensionFilter filter = new FileNameExtensionFilter("Microsoft Excel 97/2000/XP/2003", "xls");
			fileChooser.setFileFilter(filter);
			if (fileChooser.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
				File file = fileChooser.getSelectedFile();
				String filename = file.getAbsolutePath();
				if(!filename.endsWith("xls")){
					filename += ".xls";
				}

				try {
					// save to file
					exportReport(filename);
					JOptionPane.showMessageDialog(this, "Xuất dữ liệu thành công.", "Thông báo",JOptionPane.INFORMATION_MESSAGE);
				} catch (IOException | WriteException ex) {
					Logger.getLogger(MyTools.class.getName()).log(Level.SEVERE, null, ex);
				}
			}
		}
    }//GEN-LAST:event_btnSaveActionPerformed

    private void txtNoteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNoteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNoteActionPerformed

    private void btnClearFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearFilterActionPerformed
        // TODO add your handling code here:
		txtAccount.setText(null);
		txtDate.setText(null);
		txtNote.setText(null);
		filterDaTa();
    }//GEN-LAST:event_btnClearFilterActionPerformed

    private void btnFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFilterActionPerformed
        // TODO add your handling code here:
		filterDaTa();
    }//GEN-LAST:event_btnFilterActionPerformed

    private void txtBankActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBankActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBankActionPerformed

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
		 * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(MyTools.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(MyTools.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(MyTools.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(MyTools.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
        //</editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new MyTools().setVisible(true);
			}
		});
	}

	private void exportReport(String filename) throws IOException, WriteException {
		disableMyStage();

		WritableWorkbook workbook = Workbook.createWorkbook(new File(filename));
		WritableSheet sheet = workbook.createSheet("Export Data", 0);
		//Create Header
		Label label = new Label(0, 0, "Tài khoản");
		sheet.addCell(label);
		label = new Label(1, 0, "Nhận tiền");
		sheet.addCell(label);
		label = new Label(2, 0, "Chuyển tiền");
		sheet.addCell(label);
		label = new Label(3, 0, "Ngày");
		sheet.addCell(label);
		label = new Label(4, 0, "Chú thích");
		sheet.addCell(label);

		//Write data
//		DefaultTableModel model = (DefaultTableModel) tblResult.getModel();
//
//		for(int i=0; i< model.getRowCount(); i++) {
//			label = new Label(0, (i+1), model.getValueAt(i,1).toString());
//			sheet.addCell(label);
//			label = new Label(1, (i+1), model.getValueAt(i,2).toString());
//			sheet.addCell(label);
//			label = new Label(2, (i+1), model.getValueAt(i,3).toString());
//			sheet.addCell(label);
//			label = new Label(3, (i+1), model.getValueAt(i,4).toString());
//			sheet.addCell(label);
//			label = new Label(4, (i+1), model.getValueAt(i,5).toString());
//			sheet.addCell(label);
//		}

		DefaultTableModel model = (DefaultTableModel) tblResult.getModel();

		for(int i=0; i< tblResult.getRowCount(); i++) {
			label = new Label(0, (i+1), model.getValueAt(tblResult.convertRowIndexToModel(i),1).toString());
			sheet.addCell(label);
			label = new Label(1, (i+1), model.getValueAt(tblResult.convertRowIndexToModel(i),2).toString());
			sheet.addCell(label);
			label = new Label(2, (i+1), model.getValueAt(tblResult.convertRowIndexToModel(i),3).toString());
			sheet.addCell(label);
			label = new Label(3, (i+1), model.getValueAt(tblResult.convertRowIndexToModel(i),4).toString());
			sheet.addCell(label);
			label = new Label(4, (i+1), model.getValueAt(tblResult.convertRowIndexToModel(i),5).toString());
			sheet.addCell(label);
		}

		//All sheets and cells added. Now write out the workbook
		workbook.write();
		workbook.close();

		enableMyStage();
	}

	private boolean createReport() throws IOException, BiffException {
		disableMyStage();
		String fileName = txtFilename.getText();
		String bankName = txtBank.getSelectedItem().toString();
		
		//Check filename empty
		if(fileName.equals("")) {
			JOptionPane.showMessageDialog(this,
			"Bạn chưa chọn file.",
			"Thông báo",
			JOptionPane.INFORMATION_MESSAGE);
			enableMyStage();
			return false;
		}
		
		if("Vietcombank".equals(bankName)) {
			vietcombankImport(fileName);
		} else if("Đông Á Bank".equals(bankName)) {
			dongaImport(fileName);
		}

		enableMyStage();
		return true;
	}
	
	private void vietcombankImport(String fileName) throws IOException, BiffException {
		Vietcombank parser = new Vietcombank();

		//Convert
		Workbook workbook = Workbook.getWorkbook(new File(fileName));
		Sheet sheet = workbook.getSheet(0);

		DefaultTableModel model = (DefaultTableModel) tblResult.getModel();

		//Clear All Rows
		model.setRowCount(0);

		int stt = 0;

		for (int i = 9; i < sheet.getRows(); i++) {
			Cell cell1 = sheet.getCell(0, i);
			Cell cell2 = sheet.getCell(1, i);
			Cell cell3 = sheet.getCell(2, i);
			//Cell cell4 = sheet.getCell(3, i);
			Cell cell5 = sheet.getCell(4, i);

			if(parser.validData(cell1.getContents(), cell5.getContents())) {
				stt++;
				//Tai khoan
				String value1 = parser.getValue1(cell5.getContents());
				//Nhan tien
				String value2 = cell3.getContents();
				//Chuyen tien
				String value3 = cell2.getContents();
				//Ngay
				String value4 = parser.getValue4(cell1.getContents());
				//Chu thich
				String value5 = parser.getValue5(cell5.getContents());
				model.addRow(new Object[]{stt, value1, value2, value3, value4, value5});
			}

		}
	}
	
	private void dongaImport(String fileName) throws IOException, BiffException {
		Donga parser = new Donga();

		//Convert
		Workbook workbook = Workbook.getWorkbook(new File(fileName));
		Sheet sheet = workbook.getSheet(0);

		DefaultTableModel model = (DefaultTableModel) tblResult.getModel();

		//Clear All Rows
		model.setRowCount(0);

		int stt = 0;

		for (int i = 17; i < sheet.getRows(); i++) {
			Cell cell1 = sheet.getCell(0, i);
			Cell cell2 = sheet.getCell(1, i);
			Cell cell3 = sheet.getCell(2, i);
			Cell cell4 = sheet.getCell(3, i);
			Cell cell5 = sheet.getCell(4, i);
			Cell cell6 = sheet.getCell(5, i);

			if(parser.validData(cell2.getContents(), cell3.getContents())) {
				stt++;
				//Tai khoan
				String value1 = parser.getValue1(cell3.getContents());
				//Nhan tien
				String value2 = cell6.getContents();
				//Chuyen tien
				String value3 = cell5.getContents();
				//Ngay
				String value4 = cell1.getContents();
				//Chu thich
				String value5 = parser.getValue5(cell3.getContents());
				model.addRow(new Object[]{stt, value1, value2, value3, value4, value5});
			}

		}
	}

	private void filterDaTa() {

		DefaultTableModel model = (DefaultTableModel) tblResult.getModel();
		final TableRowSorter<TableModel> sorter = new TableRowSorter<TableModel>(model);
        tblResult.setRowSorter(sorter);

		String filterAccount = txtAccount.getText();
		String filterDate = txtDate.getText();
		String filterNote = txtNote.getText();
		boolean checkFilter = false;

        java.util.List<RowFilter<Object,Object>> filters = new ArrayList<RowFilter<Object,Object>>(3);

		if (filterAccount.length() > 0) {
			filters.add(RowFilter.regexFilter("(?i)" + filterAccount, 1));
			checkFilter = true;
		}

		if (filterDate.length() > 0) {
			filters.add(RowFilter.regexFilter("(?i)" + filterDate, 4));
			checkFilter = true;
		}

		if (filterNote.length() > 0) {
			filters.add(RowFilter.regexFilter("(?i)" + filterNote, 5));
			checkFilter = true;
		}

		if(checkFilter) {
			RowFilter<Object,Object> serviceFilter = RowFilter.andFilter(filters);
			sorter.setRowFilter(serviceFilter);
		} else {
			sorter.setRowFilter(null);
		}
	}

	private void disableMyStage() {
		this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
		btnChoice.setEnabled(false);
		btnReport.setEnabled(false);
		btnSave.setEnabled(false);
	}

	private void enableMyStage() {
		this.setCursor(Cursor.getDefaultCursor());
		btnChoice.setEnabled(true);
		btnReport.setEnabled(true);
		btnSave.setEnabled(true);
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnChoice;
    private javax.swing.JButton btnClearFilter;
    private javax.swing.JButton btnFilter;
    private javax.swing.JButton btnReport;
    private javax.swing.JButton btnSave;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblResult;
    private javax.swing.JTextField txtAccount;
    private javax.swing.JComboBox<String> txtBank;
    private javax.swing.JTextField txtDate;
    private javax.swing.JTextField txtFilename;
    private javax.swing.JTextField txtNote;
    // End of variables declaration//GEN-END:variables
}
